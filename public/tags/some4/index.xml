<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Some4 on Ou12</title>
    <link>http://localhost:1313/tags/some4/</link>
    <description>Recent content in Some4 on Ou12</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <managingEditor>me@example.com (John Doe)</managingEditor>
    <webMaster>me@example.com (John Doe)</webMaster>
    <lastBuildDate>Mon, 01 Sep 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/some4/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Contradiction, Contraposition and Lean</title>
      <link>http://localhost:1313/blog/contradiction-contraposition-and-lean/</link>
      <pubDate>Mon, 01 Sep 2025 00:00:00 +0000</pubDate><author>me@example.com (John Doe)</author>
      <guid>http://localhost:1313/blog/contradiction-contraposition-and-lean/</guid>
      <description>&lt;h1 id=&#34;introduction&#34;&gt;Introduction&lt;/h1&gt;&#xA;&lt;p&gt;There is nothing better in Math then the joy of proving a theorem but believe me proving it with &lt;strong&gt;Lean&lt;/strong&gt; is just another level.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Lean&lt;/strong&gt; is proof assistant programming language (also known as interactive theorem provers ) that help us to write &amp;ldquo;correct&amp;rdquo; proofs by :&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Checking and Pointing out any mistake in our proof&lt;/li&gt;&#xA;&lt;li&gt;Giving useful hints and suggestions when needed&lt;/li&gt;&#xA;&lt;li&gt;Displaying the current &lt;em&gt;goal(s)&lt;/em&gt; (what we need to prove) and our &lt;em&gt;hypotheses&lt;/em&gt; (What we know) in real time&lt;/li&gt;&#xA;&lt;li&gt;The huge &lt;em&gt;Mathlib&lt;/em&gt; library containing thousands of theorems proved by other mathematicians that we can easily use and apply in our proof&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;You might hear the sentence &amp;ldquo;formalizing a proof with lean&amp;rdquo; which mean converting a classic pen and paper proof into a proof written in formal language which is &lt;strong&gt;Lean&lt;/strong&gt; in our case&lt;/p&gt;</description>
      <content:encoded><![CDATA[<h1 id="introduction">Introduction</h1>
<p>There is nothing better in Math then the joy of proving a theorem but believe me proving it with <strong>Lean</strong> is just another level.</p>
<p><strong>Lean</strong> is proof assistant programming language (also known as interactive theorem provers ) that help us to write &ldquo;correct&rdquo; proofs by :</p>
<ul>
<li>Checking and Pointing out any mistake in our proof</li>
<li>Giving useful hints and suggestions when needed</li>
<li>Displaying the current <em>goal(s)</em> (what we need to prove) and our <em>hypotheses</em> (What we know) in real time</li>
<li>The huge <em>Mathlib</em> library containing thousands of theorems proved by other mathematicians that we can easily use and apply in our proof</li>
</ul>
<p>You might hear the sentence &ldquo;formalizing a proof with lean&rdquo; which mean converting a classic pen and paper proof into a proof written in formal language which is <strong>Lean</strong> in our case</p>
<p>This article is divided in two parts :</p>
<ul>
<li>In the first part is a general introduction to proofs where we will prove a simple theorem with different techniques</li>
<li>And in the second part we are going to formalize those proofs with lean</li>
</ul>
<h1 id="part-one--introduction-to-proofs">Part One : Introduction to proofs</h1>
<p>Our goal is to prove that : for any integer n ( $n\in\mathbb{Z}$ ) :</p>
<p>$$
\text{If }n^2 \text{ is even then } n \text{ is even}
$$</p>
<p>We can also write the proof as the form $P\implies Q$ which is read as &ldquo;$P$ <strong><em>implies</em></strong> $Q$&rdquo; :</p>
<p>$$n^2\text{  is even } \implies n \text{ is even}  $$</p>
<p>Where $P$ is called <strong><em>hypothesis</em></strong> and $Q$ is called <strong><em>conclusion</em></strong> or <strong><em>consequence</em></strong>.</p>
<p>Proving this theorem (or statement) means providing an evidence that no matter the integer n if it is fulfill the <strong><em>hypothesis</em></strong> which is $n^2$ is even then it must fulfill the <strong><em>consequence</em></strong> too</p>
<p>Sadly we can&rsquo;t test the theorem for every number because there are an infinite of them, so we have to find another way &hellip;</p>
<h3 id="a-direct-proof">A) Direct Proof</h3>
<p>In this method we assume $P$ (in other words we have $P$ ) and try to prove $Q$</p>
<p>So we assume that $n^2$ is even and try to prove that $n$ is even
In other words:
We assume $n^2=2k$ and prove that $n=2k&rsquo;$ where $k,k&rsquo;\in\mathbb{Z}$</p>
<p>We know that $n^2$ is even number (from our <em>hypothesis</em> $P$) and by definition of even number we get:
$$
n^2=2*k
$$
We take the square root of both sides:</p>
<p>$$
n=\sqrt{2*k}
$$</p>
<p>Introducing the square root just make reaching our goal harder, so we should try the next method instead</p>
<h3 id="b-proof-by-contrapositive">B) Proof by Contrapositive</h3>
<p>If starting from the $n^2$ element to reach the $n$ element make it harder why can&rsquo;t we start from the $n$ element and climb to the $n^2$ element, and that what &ldquo;Proof by contrapositive&rdquo; is about</p>
<p>We have a fact that say if $P\implies Q$ then it is the same as $\neg Q\implies \neg P$ , we call this statement the contrapositive of $P\implies Q$</p>
<p>More mathematically we can say that $P\implies Q$ is equivalent to $\neg Q\implies\neg P$ , so instead of proving the first we can prove the second one</p>
<p>The $\neg$ symbol mean &ldquo;the negation&rdquo; or &ldquo;the opposite&rdquo; so if $P$ is True, the negation of $P$ (which is $\neg P$) is False.</p>
<p>Now let&rsquo;s prove our theorem :</p>
<p>We have
$$n^2\text{  is even } \implies n \text{ is even}  $$
By using the contrapositive form
$$n\text{  is odd } \implies n^2 \text{ is odd}  $$
The negation of <code>n is even</code> is <code>n is odd</code> the same goes for $n^2$</p>
<p>now let&rsquo;s do the same as before we suppose that $n$ is odd and we prove that $n^2$ is odd</p>
<p>By definition of odd number we have :</p>
<p>$$ n=2*k+1 $$</p>
<p>We square both sides</p>
<p>$$n^2=(2*k+1)^2$$</p>
<p>We simplify the right side</p>
<p>$$n^2=4k^2+1+4k$$</p>
<p>By taking 2 as a factor</p>
<p>$$n^2=2(2k^2 +2k)+1$$</p>
<p>Let define $k&rsquo;=2k^2+2k$</p>
<p>$$n^2=2k&rsquo;+1$$</p>
<p>Which is the definition of odd number that mean $n^2$ is odd number</p>
<p>Because the contrapositive of $n^2\text{  is even } \implies n \text{ is even}$ is true , $n^2\text{  is even } \implies n \text{ is even}$ is also true</p>
<h3 id="c-proof-by-contradiction">C) Proof by Contradiction</h3>
<p>Another way to prove a theorem $P$ is by assuming that $\neg P$ is true and then find a contradiction (any result that&rsquo;s obviously false e.g. $0=1$ ) which confirm that $\neg P$ is definitely false so $P$ is true</p>
<p>Let&rsquo;s apply it to our theorem, first we assume that the whole statement is false</p>
<p>$$
\neg (n^2\text{ is even} \implies {n\text{ is even}})
$$</p>
<p>De Morgan Law state that $\neg (P\implies Q)\iff P \land \neg Q$ (the $\iff$ symbol used to show equivalence) ,which turn our statement into:</p>
<p>$$n^2 \text{ is even } \land n \text{ is odd} $$
which is read as $n^2$ is even <em><strong>and</strong></em> n is odd, now that we have those two assumptions let&rsquo;s try to find a contradiction:</p>
<p>like we did in the &ldquo;Proof by Contrapostion&rdquo; section :</p>
<p>$$ n = 2k + 1 $$
$$n^2 = (2k+1)^2$$
$$ n^2 = 4k^2 +1 + 4k$$
$$n^2=2(2k^2+2k)+1$$
Let&rsquo;s define $k&rsquo;=2k^2+2k$
$$n^2=2k&rsquo;+1$$</p>
<p>We can see that $n^2$ is an odd number by definition, but our assumption say that $n^2$ is even Contradiction!!!</p>
<p>Which prove that $\neg (n^2\text{ is even} \implies {n\text{ is even}})$ is false so &ldquo;$n^2\text{ is even}\implies\ n\text{ is even}$&rdquo; must be true</p>
<h1 id="part-two--formalizing-with-lean">Part Two : Formalizing with Lean</h1>
<h3 id="quick-recap">Quick Recap:</h3>
<p>Our goal was to prove that
$$
n^2\text{ is even} \implies {n\text{ is even}}
$$
which we did using <a href="/blog/contradiction-contraposition-and-lean/#b-proof-by-contrapositive">contrapositive</a> and <a href="/blog/contradiction-contraposition-and-lean/#c-proof-by-contradiction">contradiction</a> methods, To keep the article small we will only write the proof by contradiction method in lean</p>
<p>To use Lean you can either <a href="https://leanprover-community.github.io/get_started.html">install</a> it locally or use the <a href="https://live.lean-lang.org/#codez=JYWwDg9gTgLgBAWQIYwBYBtgCMBQOCmAHkuOvnAN4B2cAXHICSEAvnABSp1wCiAbvjaxoA9OACYAlOM69&#43;bKuNoBeOFgCeOOHADO0KKqA">lean4web</a> online version</p>
<p>For this tutorial we are going to use the <a href="https://live.lean-lang.org/#codez=JYWwDg9gTgLgBAWQIYwBYBtgCMBQOCmAHkuOvnAN4B2cAXHICSEAvnABSp1wCiAbvjaxoA9OACYAlOM69&#43;bKuNoBeOFgCeOOHADO0KKqA">online</a> version, open the link and you will get this:</p>
<p><img src="https://i.ibb.co/5x5s8zGy/a.png" alt="lean online editor"></p>
<p>The left-hand side is where you type the code (or the proof in our case) and the right-hand side is called the <strong>Info view</strong> where Lean will display all the important information (e.g. hypothesis, goals, errors, suggestions, &hellip;)</p>
<p>Now back to the code:</p>





<div class="highlight"><pre tabindex="0" style="color:#e2e4e5;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-lean4" data-lang="lean4"><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1</span><span><span style="color:#ff6ac1">import</span> Mathlib
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2</span><span>  
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3</span><span>
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">4</span><span><span style="color:#ff6ac1">example</span> <span style="color:#ff6ac1">{</span>n <span style="color:#ff6ac1">:</span> ℤ<span style="color:#ff6ac1">}</span> <span style="color:#ff6ac1">(</span>h <span style="color:#ff6ac1">:</span> Even <span style="color:#ff6ac1">(</span>n <span style="color:#ff5c57">^</span> <span style="color:#ff9f43">2</span><span style="color:#ff6ac1">))</span> <span style="color:#ff6ac1">:</span> Even <span style="color:#ff6ac1">(</span>n<span style="color:#ff6ac1">):</span><span style="color:#ff5c57">=</span> <span style="color:#ff6ac1">by</span>
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">5</span><span>  <span style="color:#ff5c57">sorry</span></span></span></code></pre></div><p>The first line tell Lean to import the <code>Mathlib</code> library which contain everything we need to prove our theorem.
Note : it&rsquo;s a bad practice to import all the <code>Mathlib</code> library you should only import what you need only, I did it to keep the tutorial simple</p>
<p>The 7th line is the one we use to declare a theorem which are going to prove</p>
<ul>
<li>
<p>The <code>example</code> keyword is used to declare that we are going to start a proof, we can also use <code>theorem</code> or <code>lemma</code> keyword. But unlike <code>example</code> you need to provide a name for them that so you can refer to them later in other proofs which is not possible for <code>example</code> (e.g. <code>theorem even_square</code> or <code>theorem my_unique_proof</code> the name doesn&rsquo;t matter)</p>
</li>
<li>
<p><code>{n : ℤ}</code> we define an integer n</p>
</li>
<li>
<p><code>(h : Even (n ^ 2))</code> we declare the hypothesis (the $P$ from before) which is $n^2$ is even and give it a name (I give the name <code>h</code>) so we can refer to it in our proof</p>
</li>
<li>
<p><code>: Even (n)</code> now we declare the consequence (the $Q$ from before) which must be typed after the <code>:</code></p>
</li>
<li>
<p><code>:=</code> after this symbol we start writing the proof if we have a proof that can directly close our goal ($n$ is even) we can write it after that symbol and we are done (e.g.<code>:= even_squae_eq_ev</code> ) . We call this mode <strong>Term mode</strong></p>
<p>Note: for trivial theorems we can even use our hypotheses to close the goal
for example, if want to prove $P$ (any statement $P$) and we already have $P$ as a hypothesis we can do :</p>
</li>
</ul>





<pre tabindex="0"><code>theorem very_easy  (h : P) : P := h</code></pre><ul>
<li>Okay back to our theorem, in our case we don&rsquo;t have a theorem to close the goal so we switch to <strong>Tactic mode</strong> (where we will use tactics to close the goal) by using the keyword <code>by</code> after <code>:=</code></li>
</ul>
<p>Notice that if you go to the <a href="https://live.lean-lang.org/#codez=JYWwDg9gTgLgBAWQIYwBYBtgCMBQOCmAHkuOvnAN4B2cAXHICSEAvnABSp1wCiAbvjaxoA9OACYAlOM69&#43;bKuNoBeOFgCeOOHADO0KKqA">online</a> version and put your mouse cursor after the <code>by</code> keyword the Info view change</p>
<blockquote>
<p><strong>1 goal</strong></p>
<p><strong>n</strong> : ℤ</p>
<p><strong>h</strong> : Even (n ^ 2)</p>
<p><strong>⊢</strong> Even n</p></blockquote>
<p>We see everything we defined so far the number <code>n</code> , the hypothesis <code>h</code> and our goal which is anything after <strong>⊢</strong> .</p>
<p>The 8th line have the keyword <code>sorry</code> which mean &ldquo;sorry we don&rsquo;t have proof yet but please don&rsquo;t throw an error&rdquo;</p>
<p>Now let&rsquo;s try to prove it using our previous knowledge</p>
<h3 id="proof-by-contradiction">Proof by Contradiction</h3>
<p>Copy and paste the newline of code in your code editor so it became like this:</p>





<div class="highlight"><pre tabindex="0" style="color:#e2e4e5;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-lean4" data-lang="lean4"><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1</span><span><span style="color:#ff6ac1">import</span> Mathlib
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2</span><span>
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3</span><span><span style="color:#ff6ac1">example</span> <span style="color:#ff6ac1">{</span>n <span style="color:#ff6ac1">:</span> ℕ<span style="color:#ff6ac1">}</span> <span style="color:#ff6ac1">(</span>h <span style="color:#ff6ac1">:</span> Even <span style="color:#ff6ac1">(</span>n <span style="color:#ff5c57">^</span> <span style="color:#ff9f43">2</span><span style="color:#ff6ac1">))</span> <span style="color:#ff6ac1">:</span> Even <span style="color:#ff6ac1">(</span>n<span style="color:#ff6ac1">):</span><span style="color:#ff5c57">=</span> <span style="color:#ff6ac1">by</span>
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">4</span><span>  by_contra hneg</span></span></code></pre></div><p>We start the proof by using <code>by_contra</code> tactic which does exactly as we did in the beginning of the contradiction proof. If we have a hypothesis $P$ and consequence $Q$ (or in the form $P\implies Q$) it return a new hypothesis $\neg Q$ and give it the name <code>hneg</code> and keep our original hypothesis $P$ . Which we can see in the info view if we put the cursor after <code>hneg</code></p>
<blockquote>
<p><strong>n</strong> : ℕ</p>
<p><strong>h</strong> : Even (n ^ 2)</p>
<p><strong>hneg</strong> : ¬Even n</p>
<p><strong>⊢</strong> False</p></blockquote>
<p>Notice that the goal changed to <strong>False</strong> which mean that if we can use our assumptions to find a contradiction that it is obviously false we can close the goal and the theorem is proved</p>
<p>You can also see that our hypothesis <code>hneg</code> is $\neg\text{ Even }n$ , Lean doesn&rsquo;t know that the negation of even is odd so we have to use an already proven theorem from the <code>Mathlib</code> library that say just that which is <code>Nat.not_even_iff_odd</code> :</p>





<div class="highlight"><pre tabindex="0" style="color:#e2e4e5;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-lean4" data-lang="lean4"><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1</span><span><span style="color:#ff5c57">#</span>check Nat<span style="color:#ff5c57">.</span>not_even_iff_odd</span></span></code></pre></div><p><code>#check</code> let us print the theorem in our info view (putting the cursor at the end of the line or by hovering at <code>#check</code>)</p>
<blockquote>
<p>Nat.not_even_iff_odd {n : ℕ} : ¬Even n ↔ Odd n</p></blockquote>
<p>Notice the equivalence keyword <strong>↔</strong> , what are we going to do next require an implication not equivalence likely there is a way to do a transform</p>





<div class="highlight"><pre tabindex="0" style="color:#e2e4e5;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-lean4" data-lang="lean4"><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1</span><span><span style="color:#ff5c57">#</span>check Nat<span style="color:#ff5c57">.</span>not_even_iff_odd<span style="color:#ff5c57">.</span><span style="color:#ff9f43">1</span></span></span></code></pre></div><p>The <code>.1</code> give the left to right implication, which is the one we will use</p>
<blockquote>
<p>Nat.not_even_iff_odd.mp : ¬Even ?m.1 → Odd ?m.1</p></blockquote>





<div class="highlight"><pre tabindex="0" style="color:#e2e4e5;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-lean4" data-lang="lean4"><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1</span><span><span style="color:#ff5c57">#</span>check Nat<span style="color:#ff5c57">.</span>not_even_iff_odd<span style="color:#ff5c57">.</span><span style="color:#ff9f43">2</span></span></span></code></pre></div><p>And <code>.2</code> give the other way around</p>
<blockquote>
<p>Nat.not_even_iff_odd.mpr : Odd ?m.1 → ¬Even ?m.1</p></blockquote>
<p>Note: you can also read definition of theorem or tactic or any keyword by hovering above it with the mouse.</p>
<p>Add those lines of code to yours:</p>





<div class="highlight"><pre tabindex="0" style="color:#e2e4e5;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-lean4" data-lang="lean4"><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1</span><span>
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2</span><span>apply Nat<span style="color:#ff5c57">.</span>not_even_iff_odd<span style="color:#ff5c57">.</span><span style="color:#ff9f43">1</span> <span style="color:#ff6ac1">at</span> hneg
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3</span><span>unfold Odd <span style="color:#ff6ac1">at</span> hneg
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">4</span><span><span style="color:#ff6ac1">obtain</span> <span style="color:#ff5c57">⟨</span> k<span style="color:#ff6ac1">,</span>hk<span style="color:#ff5c57">⟩</span> <span style="color:#ff6ac1">:</span><span style="color:#ff5c57">=</span> hneg</span></span></code></pre></div><ul>
<li>We use the <code>apply</code> tactic to apply the implication $\neg\text{ Even }n\implies\text{Odd }n$ to the <code>hneg</code> hypothesis which convert it to <code>Odd n</code> as you can see in the info view</li>
</ul>
<blockquote>
<p><strong>1 goal</strong></p>
<p><strong>n</strong> : ℕ</p>
<p><strong>h</strong> : Even (n ^ 2)</p>
<p><strong>hneg</strong> : Odd n</p>
<p><strong>⊢</strong> False</p></blockquote>
<ul>
<li><code>unfold</code> tactic as the name implies unfold the definition in this case the definition of <code>Odd</code> in the hypothesis <code>hneg</code> which give the following</li>
</ul>
<blockquote>
<p><strong>1 goal</strong></p>
<p><strong>n</strong> : ℕ</p>
<p><strong>h</strong> : Even (n ^ 2)</p>
<p><strong>hneg</strong> : ∃ k, n = 2 * k + 1</p>
<p><strong>⊢</strong> False</p></blockquote>
<p>The <code>∃</code> keyword mean &ldquo;there exists&rdquo; which give the following &ldquo;there exists a number k that satisfies n = 2 * k + 1&rdquo;.
Note that the <code>unfold</code> tactic only needed for us humans to make the hypothesis more readable, but Lean will do it automatically when using some tactics like <code>obtain</code> ,this why you can delete the <code>unfold</code> line if you want</p>
<ul>
<li><code>obtain</code> tactic break the hypothesis <code>hneg</code> into two hypothesis <code>h</code> and <code>hk</code></li>
</ul>
<blockquote>
<p><strong>n</strong> : ℕ</p>
<p><strong>h</strong> : Even (n ^ 2)</p>
<p><strong>k</strong> : ℕ</p>
<p><strong>hk</strong> : n = 2 * k + 1</p>
<p><strong>⊢</strong> False</p></blockquote>
<p>Now let&rsquo;s add those lines of code to yours:</p>





<div class="highlight"><pre tabindex="0" style="color:#e2e4e5;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-lean4" data-lang="lean4"><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1</span><span>
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2</span><span><span style="color:#ff6ac1">have</span> h&#39;<span style="color:#ff6ac1">:</span> Odd <span style="color:#ff6ac1">(</span>n<span style="color:#ff5c57">^</span><span style="color:#ff9f43">2</span><span style="color:#ff6ac1">)</span> <span style="color:#ff6ac1">:</span><span style="color:#ff5c57">=</span> <span style="color:#ff6ac1">by</span>
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3</span><span>
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4</span><span>  unfold Odd
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5</span><span>   
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6</span><span>  use <span style="color:#ff6ac1">(</span><span style="color:#ff9f43">2</span><span style="color:#ff5c57">*</span>k<span style="color:#ff5c57">^</span><span style="color:#ff9f43">2</span> <span style="color:#ff5c57">+</span><span style="color:#ff9f43">2</span><span style="color:#ff5c57">*</span>k<span style="color:#ff6ac1">)</span>
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7</span><span>
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8</span><span>  <span style="color:#ff6ac1">calc</span>
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9</span><span>
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10</span><span>    n<span style="color:#ff5c57">^</span><span style="color:#ff9f43">2</span> <span style="color:#ff5c57">=</span> <span style="color:#ff6ac1">(</span><span style="color:#ff9f43">2</span><span style="color:#ff5c57">*</span>k <span style="color:#ff5c57">+</span><span style="color:#ff9f43">1</span><span style="color:#ff6ac1">)</span><span style="color:#ff5c57">^</span><span style="color:#ff9f43">2</span>       <span style="color:#ff6ac1">:</span><span style="color:#ff5c57">=</span> <span style="color:#ff6ac1">by</span> rw <span style="color:#ff6ac1">[</span>hk<span style="color:#ff6ac1">]</span>
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11</span><span>
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12</span><span>    <span style="color:#ff5c57">_</span> <span style="color:#ff5c57">=</span> <span style="color:#ff9f43">2</span><span style="color:#ff5c57">*</span><span style="color:#ff6ac1">(</span><span style="color:#ff9f43">2</span><span style="color:#ff5c57">*</span>k<span style="color:#ff5c57">^</span><span style="color:#ff9f43">2</span> <span style="color:#ff5c57">+</span><span style="color:#ff9f43">2</span><span style="color:#ff5c57">*</span>k<span style="color:#ff6ac1">)</span> <span style="color:#ff5c57">+</span> <span style="color:#ff9f43">1</span> <span style="color:#ff6ac1">:</span><span style="color:#ff5c57">=</span> <span style="color:#ff6ac1">by</span> ring</span></span></code></pre></div><p>Remember in the proof by contradiction when we proved that $n^2$ is odd we started from the hypothesis n is odd then by definition
$$ n = 2k + 1 $$
$$n^2 = (2k+1)^2$$
$$ n^2 = 4k^2 +1 + 4k$$
$$n^2=2(2k^2+2k)+1$$
Let&rsquo;s define $k&rsquo;=2k^2+2k$
$$n^2=2k&rsquo;+1$$
we are going to do exactly the same</p>
<ul>
<li>
<p>The <code>have</code> tactic allow us to introduce new hypothesis but we need to prove it, we introduce the hypothesis <code>h'</code> which say $n^2$ is Odd by using the newly obtained hypothesis <code>hk</code>.</p>
<p>If you place the cursor after the <code>by</code> keyword you can see that goal change in the info view</p>
</li>
</ul>
<blockquote>
<p><strong>n</strong> : ℕ</p>
<p><strong>h</strong> : Even (n ^ 2)</p>
<p><strong>k</strong> : ℕ</p>
<p><strong>hk</strong> : n = 2 * k + 1</p>
<p><strong>⊢</strong> Odd (n ^ 2)</p></blockquote>
<ul>
<li>Notice that we used the <code>unfold</code> tactic without specifying a hypothesis then it will be applied to the goal as you see in the info view</li>
</ul>
<blockquote>
<p>&hellip;</p>
<p><strong>⊢</strong> ∃ k, n ^ 2 = 2 * k + 1</p></blockquote>
<ul>
<li>The goal now have the ∃ keyword we now have to provide a value that satisfies the <code>n^2=2*k+1</code>, we know from the proof we did before that $2k^2+2k$ satisfies it so we use the tactic <code>use</code> followed by the value $2k^2+2k$ our goal become</li>
</ul>
<blockquote>
<p>&hellip;</p>
<p><strong>⊢</strong> n ^ 2 = 2 * (2 * k ^ 2 + 2 * k) + 1</p></blockquote>
<ul>
<li>To be able to perform operations on equations (.e.g substitution, simplification, &hellip;) we enter the <code>calc</code> mode, in the calc mode every step must be proved
<ul>
<li>
<p><code>n^2 = (2*k +1)^2       := by rw [hk]</code> we start from $n^2$ and then substitute n with it&rsquo;s equivalent <code>2*k +1</code> which we know from the hypothesis <code>hk</code> .</p>
</li>
<li>
<p>To do this in lean we write the equation<code>n^2 = (2*k +1)^2</code> and then add the <code>:=</code> to declare that we are going to prove it. Add the <code>by</code> keyword to enter tactic mode, notice that the goal changed to <strong>⊢</strong> n ^ 2 = (2 * k + 1) ^ 2</p>
</li>
<li>
<p>We use the tactic <code>rw</code> (which stands for rewrite) with the hypothesis <code>hk</code> .<code>rw</code> will replace the left-hand side of the <code>hk</code> found on the left-hand side of our goal with whatever in the right-hand side of <code>hk</code> which is exactly our goal</p>
</li>
<li>
<p><code>_ = 2*(2*k^2 +2*k) + 1</code> the <code>_</code> is equivalent to what was on the right-hand side on the step above which in this case <code>(2*k +1)^2</code> so the equation which we need to prove is <code>(2*k +1)^2= 2*(2*k^2 +2*k) + 1</code></p>
</li>
<li>
<p>We can prove this kind of algebraic simplification easily by using the <code>ring</code> tactic as shown in the code above</p>
</li>
<li>
<p>And like that we successfully proved that <code>n^2 = 2*(2*k^2 +2*k) + 1</code> which is exactly our goal needed to prove the hypothesis <code>h'</code></p>
</li>
</ul>
</li>
</ul>
<p>Let&rsquo;s see the info view to check our progress put the cursor on newline after the previous code</p>
<blockquote>
<p><strong>n</strong> : ℕ</p>
<p><strong>h</strong> : Even (n ^ 2)</p>
<p><strong>k</strong> : ℕ</p>
<p><strong>hk</strong> : n = 2 * k + 1</p>
<p><strong>h&rsquo;</strong> : Odd (n ^ 2)</p>
<p><strong>⊢</strong> False</p></blockquote>
<p>You can see we indeed have a contradiction between hypothesis <code>h</code> and <code>h'</code> , but lean still can&rsquo;t see it because as we know it don&rsquo;t know that odd is the opposite of even so let&rsquo;s change that. By adding this line of code:</p>





<div class="highlight"><pre tabindex="0" style="color:#e2e4e5;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-lean4" data-lang="lean4"><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1</span><span>apply Nat<span style="color:#ff5c57">.</span>not_odd_iff_even<span style="color:#ff5c57">.</span><span style="color:#ff9f43">2</span> <span style="color:#ff6ac1">at</span> h</span></span></code></pre></div><p>We apply the second implication of theorem that we saw before which state:</p>
<p>$$
\text{Odd }n \implies\neg\text{ Even } n
$$</p>
<p>To the hypothesis <code>h</code> ,which give the following</p>
<blockquote>
<p><strong>n k</strong> : ℕ</p>
<p><strong>hk</strong> : n = 2 * k + 1</p>
<p><strong>h&rsquo;</strong> : Odd (n ^ 2)</p>
<p><strong>h</strong> : ¬Odd (n ^ 2)</p>
<p><strong>⊢</strong> False</p></blockquote>
<p>now Lean can see the contradiction we just need to type <code>contradiction</code> which is also a tactic</p>





<div class="highlight"><pre tabindex="0" style="color:#e2e4e5;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-lean4" data-lang="lean4"><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1</span><span>contradiction</span></span></code></pre></div><p>And voila, looking at the info view we can see:</p>
<blockquote>
<p><strong>No goals</strong></p></blockquote>
<p>Which mean the goal is closed and by that we proved the theorem by contradiction.</p>
<p>And here the full code</p>





<div class="highlight"><pre tabindex="0" style="color:#e2e4e5;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-lean4" data-lang="lean4"><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1</span><span><span style="color:#ff6ac1">import</span> Mathlib
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2</span><span>
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3</span><span><span style="color:#ff6ac1">example</span> <span style="color:#ff6ac1">{</span>n <span style="color:#ff6ac1">:</span> ℕ<span style="color:#ff6ac1">}</span> <span style="color:#ff6ac1">(</span>h <span style="color:#ff6ac1">:</span> Even <span style="color:#ff6ac1">(</span>n <span style="color:#ff5c57">^</span> <span style="color:#ff9f43">2</span><span style="color:#ff6ac1">))</span> <span style="color:#ff6ac1">:</span> Even <span style="color:#ff6ac1">(</span>n<span style="color:#ff6ac1">):</span><span style="color:#ff5c57">=</span> <span style="color:#ff6ac1">by</span>
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4</span><span>
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5</span><span>by_contra hneg
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6</span><span>
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7</span><span>apply Nat<span style="color:#ff5c57">.</span>not_even_iff_odd<span style="color:#ff5c57">.</span><span style="color:#ff9f43">1</span> <span style="color:#ff6ac1">at</span> hneg
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8</span><span>
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9</span><span>unfold Odd <span style="color:#ff6ac1">at</span> hneg
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10</span><span>
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11</span><span><span style="color:#ff6ac1">obtain</span> <span style="color:#ff5c57">⟨</span> k<span style="color:#ff6ac1">,</span>hk<span style="color:#ff5c57">⟩</span> <span style="color:#ff6ac1">:</span><span style="color:#ff5c57">=</span> hneg
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12</span><span>
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13</span><span><span style="color:#ff6ac1">have</span> h&#39;<span style="color:#ff6ac1">:</span> Odd <span style="color:#ff6ac1">(</span>n<span style="color:#ff5c57">^</span><span style="color:#ff9f43">2</span><span style="color:#ff6ac1">)</span> <span style="color:#ff6ac1">:</span><span style="color:#ff5c57">=</span> <span style="color:#ff6ac1">by</span>
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14</span><span>
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15</span><span>unfold Odd
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16</span><span>
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17</span><span>use <span style="color:#ff6ac1">(</span><span style="color:#ff9f43">2</span><span style="color:#ff5c57">*</span>k<span style="color:#ff5c57">^</span><span style="color:#ff9f43">2</span> <span style="color:#ff5c57">+</span><span style="color:#ff9f43">2</span><span style="color:#ff5c57">*</span>k<span style="color:#ff6ac1">)</span>
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18</span><span>
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19</span><span><span style="color:#ff6ac1">calc</span>
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">20</span><span>
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">21</span><span>n<span style="color:#ff5c57">^</span><span style="color:#ff9f43">2</span> <span style="color:#ff5c57">=</span> <span style="color:#ff6ac1">(</span><span style="color:#ff9f43">2</span><span style="color:#ff5c57">*</span>k <span style="color:#ff5c57">+</span><span style="color:#ff9f43">1</span><span style="color:#ff6ac1">)</span><span style="color:#ff5c57">^</span><span style="color:#ff9f43">2</span> <span style="color:#ff6ac1">:</span><span style="color:#ff5c57">=</span> <span style="color:#ff6ac1">by</span> rw <span style="color:#ff6ac1">[</span>hk<span style="color:#ff6ac1">]</span>
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">22</span><span>
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">23</span><span><span style="color:#ff5c57">_</span> <span style="color:#ff5c57">=</span> <span style="color:#ff9f43">2</span><span style="color:#ff5c57">*</span><span style="color:#ff6ac1">(</span><span style="color:#ff9f43">2</span><span style="color:#ff5c57">*</span>k<span style="color:#ff5c57">^</span><span style="color:#ff9f43">2</span> <span style="color:#ff5c57">+</span><span style="color:#ff9f43">2</span><span style="color:#ff5c57">*</span>k<span style="color:#ff6ac1">)</span> <span style="color:#ff5c57">+</span> <span style="color:#ff9f43">1</span> <span style="color:#ff6ac1">:</span><span style="color:#ff5c57">=</span> <span style="color:#ff6ac1">by</span> ring
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">24</span><span>
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">25</span><span>apply Nat<span style="color:#ff5c57">.</span>not_odd_iff_even<span style="color:#ff5c57">.</span><span style="color:#ff9f43">2</span> <span style="color:#ff6ac1">at</span> h
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">26</span><span>
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">27</span><span>contradiction</span></span></code></pre></div><h2 id="extra">Extra</h2>
<p>Here the full code for the proof by contrapositive</p>





<div class="highlight"><pre tabindex="0" style="color:#e2e4e5;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-lean4" data-lang="lean4"><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1</span><span><span style="color:#ff6ac1">import</span> Mathlib
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2</span><span>
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3</span><span><span style="color:#ff6ac1">example</span> <span style="color:#ff6ac1">{</span>n <span style="color:#ff6ac1">:</span> ℕ<span style="color:#ff6ac1">}</span> <span style="color:#ff6ac1">(</span>h <span style="color:#ff6ac1">:</span> Even <span style="color:#ff6ac1">(</span>n <span style="color:#ff5c57">^</span> <span style="color:#ff9f43">2</span><span style="color:#ff6ac1">))</span> <span style="color:#ff6ac1">:</span> Even <span style="color:#ff6ac1">(</span>n<span style="color:#ff6ac1">):</span><span style="color:#ff5c57">=</span> <span style="color:#ff6ac1">by</span>
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4</span><span>  contrapose h
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5</span><span>  apply Nat<span style="color:#ff5c57">.</span>not_even_iff_odd<span style="color:#ff5c57">.</span><span style="color:#ff9f43">1</span> <span style="color:#ff6ac1">at</span> h
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6</span><span>  apply Nat<span style="color:#ff5c57">.</span>not_even_iff_odd<span style="color:#ff5c57">.</span><span style="color:#ff9f43">2</span>
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7</span><span>  <span style="color:#ff6ac1">obtain</span> <span style="color:#ff5c57">⟨</span>k<span style="color:#ff6ac1">,</span>hk<span style="color:#ff5c57">⟩</span> <span style="color:#ff6ac1">:</span><span style="color:#ff5c57">=</span> h
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8</span><span>  use <span style="color:#ff6ac1">(</span><span style="color:#ff9f43">2</span><span style="color:#ff5c57">*</span>k<span style="color:#ff5c57">^</span><span style="color:#ff9f43">2</span> <span style="color:#ff5c57">+</span> <span style="color:#ff9f43">2</span><span style="color:#ff5c57">*</span>k<span style="color:#ff6ac1">)</span>
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9</span><span>  <span style="color:#ff6ac1">calc</span>
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10</span><span>    n<span style="color:#ff5c57">^</span><span style="color:#ff9f43">2</span> <span style="color:#ff5c57">=</span> <span style="color:#ff6ac1">(</span><span style="color:#ff9f43">2</span><span style="color:#ff5c57">*</span>k <span style="color:#ff5c57">+</span> <span style="color:#ff9f43">1</span><span style="color:#ff6ac1">)</span><span style="color:#ff5c57">^</span><span style="color:#ff9f43">2</span>        <span style="color:#ff6ac1">:</span><span style="color:#ff5c57">=</span> <span style="color:#ff6ac1">by</span> rw <span style="color:#ff6ac1">[</span>hk<span style="color:#ff6ac1">]</span>
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11</span><span>    <span style="color:#ff5c57">_</span>   <span style="color:#ff5c57">=</span> <span style="color:#ff9f43">4</span><span style="color:#ff5c57">*</span>k<span style="color:#ff5c57">^</span><span style="color:#ff9f43">2</span> <span style="color:#ff5c57">+</span> <span style="color:#ff9f43">1</span> <span style="color:#ff5c57">+</span> <span style="color:#ff9f43">4</span><span style="color:#ff5c57">*</span>k    <span style="color:#ff6ac1">:</span><span style="color:#ff5c57">=</span> <span style="color:#ff6ac1">by</span> ring
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12</span><span>    <span style="color:#ff5c57">_</span>   <span style="color:#ff5c57">=</span> <span style="color:#ff9f43">2</span><span style="color:#ff5c57">*</span><span style="color:#ff6ac1">(</span><span style="color:#ff9f43">2</span><span style="color:#ff5c57">*</span>k<span style="color:#ff5c57">^</span><span style="color:#ff9f43">2</span> <span style="color:#ff5c57">+</span> <span style="color:#ff9f43">2</span><span style="color:#ff5c57">*</span>k<span style="color:#ff6ac1">)</span> <span style="color:#ff5c57">+</span><span style="color:#ff9f43">1</span> <span style="color:#ff6ac1">:</span><span style="color:#ff5c57">=</span> <span style="color:#ff6ac1">by</span> ring</span></span></code></pre></div><p>I want to keep the article small this why I can&rsquo;t explain it all, but here some tips:</p>
<ul>
<li><code>contrapose h</code> , as we did above in the proof by contrapositive we turn $P\implies Q$ into $\neg Q\implies\neg P$ and that exactly what <code>contrapose</code> tactic do it negate the hypothesis <code>h</code> and the goal and then swap their places, so before using <code>contrapose</code> tactic we have:</li>
</ul>
<blockquote>
<p><strong>n</strong> : ℕ</p>
<p><strong>h</strong> : Even (n ^ 2)</p>
<p><strong>⊢</strong> Even n</p></blockquote>
<ul>
<li>and after using <code>contrapose</code> , we get:</li>
</ul>
<blockquote>
<p><strong>n</strong> : ℕ</p>
<p><strong>h</strong> : ¬Even n</p>
<p><strong>⊢</strong> ¬Even (n ^ 2)</p></blockquote>
<ul>
<li>As you can notice the negate of hypothesis <code>h</code> become the goal and the negate of the goal become the hypothesis <code>h</code></li>
<li>An important remark for the 6th line: using <code>apply</code> without specifying a hypothesis mean using it for the goal and the work of <code>apply</code> is reversed. So if the implication we want to use is $P\implies Q$ and our goal is Q using <code>apply</code> will turn the goal intro $P$ , and that exactly what happen here is our implication <code>Nat.not_even_iff_odd.2</code>
$$
\text{Odd }n\implies\neg\text{Even }n
$$
which also work $n^2$</li>
</ul>
<p>$$
\text{Odd }n^2\implies\neg\text{Even }n^2
$$</p>
<ul>
<li>Notice that the goal is the same as the consequence of the above implication $\neg\text{Even }n^2$ ,so after applying the implication to our goal with this line of code <code>apply Nat.not_even_iff_odd.2</code> the goal became :</li>
</ul>
<blockquote>
<p><strong>n</strong> : ℕ</p>
<p><strong>h</strong> : Odd n</p>
<p><strong>⊢</strong> Odd (n ^ 2)</p></blockquote>
<h2 id="the-end">The End</h2>
<p>If you enjoyed using lean and want to learn more about it make sure to visit <a href="https://leanprover-community.github.io/learn.html">Learning Lean 4</a> where you can find some of the excellent learning resources</p>
<p>If you like this article and want to see more consider doing a small <a href="https://ko-fi.com/ou122">donation</a></p>
<p>My <a href="https://github.com/ouss122">GitHub</a>.</p>
<p>My <a href="https://www.linkedin.com/in/oussama-salmi-36355527a/">LinkedIn</a>.</p>
]]></content:encoded>
    </item>
  </channel>
</rss>
